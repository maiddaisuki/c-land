#!/bin/sh

# BUILD_SYSTEM: autotools (autoconf)

##
# Build autoconf (options as of 2.72)
#
# --with-lispdir=DIR
#
## Variables
#
# M4
# EMACS
#

autoconf_configure() {
	local log_file=${logdir}/configure.log

	local configure_options="
		--build=${target_triplet}
		--host=${target_triplet}

		--disable-silent-rules

		--prefix=${prefix}
		--libdir=${prefix}/${libdir}
	"

	if test -f ${builddir}/Makefile; then
		make distclean >/dev/null 2>&1
		rm -f ${logdir}/*
	fi

	log "%s: configuring\n" ${package}

	${srcdir}/configure \
		EMACS=false \
		M4=${PREFIX}/bin/m4 \
		${configure_options} \
		>>${log_file} 2>&1

	test $? -eq 0 || die "${package}: configuration failed"
}

autoconf_build() {
	_make_build
}

autoconf_check() {
	if ${MAKE_CHECK}; then
		_make_check
	fi
}

autoconf_stage() {
	_make_stage
}

autoconf_pack_hook() {
	local m4=${PREFIX}/bin/m4
	local yacc='bison -y'
	local pkg_config=pkgconf

	if ${WITH_BISON}; then
		yacc="${PREFIX}/bin/bison -y"
	fi

	if ${WITH_PKGCONF}; then
		pkg_config=${PREFIX}/bin/pkgconf
	elif ${WITH_PKG_CONFIG-false}; then
		pkg_config=${PREFIX}/bin/pkg-config
	fi

	cat <<-EOF >${destdir}${prefix}/share/config.site
		#!/bin/sh

		# config.site generated by build.sh
		#
		# to be installed in ${PREFIX}/share

		if test "\${libdir}" = NONE; then
			libdir=${PREFIX}/${libdir}
		fi

		test -n "\${CC}"       || CC=${CC}
		test -n "\${CXX}"      || CXX=${CXX}
		test -n "\${AS}"       || AS=${AS}
		test -n "\${LD}"       || LD=${LD}
		test -n "\${AR}"       || AR=${AR}
		test -n "\${RANLIB}"   || RANLIB=${RANLIB}
		test -n "\${NM}"       || NM=${NM}
		test -n "\${OBJDUMP}"  || OBJDUMP=${OBJDUMP}
		test -n "\${OBJCOPY}"  || OBJCOPY=${OBJCOPY}
		test -n "\${STRIP}"    || STRIP=${STRIP}

		test -n "\${CPPFLAGS}" || CPPFLAGS='${CPPFLAGS}'
		test -n "\${CFLAGS}"   || CFLAGS='${CFLAGS}'
		test -n "\${CXXFLAGS}" || CXXFLAGS='${CXXFLAGS}'
		test -n "\${ASFLAGS}"  || ASFLAGS='${ASFLAGS}'
		test -n "\${LDFLAGS}"  || LDFLAGS='${LDFLAGS}'

		test -n "\${M4}"           || M4='${m4}'
		test -n "\${PKG_CONFIG}"   || PKG_CONFIG='${pkg_config}'
		test -n "\${YACC}"         || YACC='${yacc}'
	EOF

	test $? -eq 0 || exit
}

autoconf_pack() {
	_make_pack autoconf_pack_hook
}

autoconf_install() {
	_make_install
}

autoconf_main() {
	_make_main autoconf ${AUTOCONF_SRCDIR}
}
